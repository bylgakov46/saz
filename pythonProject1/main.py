# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
import nmap3
import sys
import os
import webbrowser
import subprocess



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(568, 602)
        MainWindow.setMinimumSize(QtCore.QSize(568, 602))
        MainWindow.setMaximumSize(QtCore.QSize(568, 602))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(10, 30, 191, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("Сканирование по IP-адресу")
        self.comboBox.addItem("Сканирование по адресу")
        self.comboBox.currentIndexChanged.connect(self.activate1)

        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(220, 30, 301, 22))
        self.lineEdit.setText("127.0.0.1")
        self.lineEdit.setObjectName("lineEdit")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(190, 70, 151, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.Nmaep)

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(160, 120, 211, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.Vulners)

        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(180, 490, 300, 28))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.Otchet)

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(-6, -5, 581, 581))
        self.label.setText("")
        self.label.setObjectName("label")

        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(20, 160, 521, 311))
        self.textEdit.setObjectName("textEdit")

        self.label.raise_()
        self.comboBox.raise_()
        self.lineEdit.raise_()
        self.pushButton.raise_()
        self.pushButton_2.raise_()
        self.pushButton_3.raise_()
        self.textEdit.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 568, 26))
        self.menubar.setObjectName("menubar")

        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.action = QtWidgets.QAction(MainWindow)
        # self.action.triggered.connect(self.dialog)
        self.action.setObjectName("action")
        self.action_2 = QtWidgets.QAction(MainWindow)
        self.action_2.setObjectName("action_2")

        self.menu.addAction(self.action)
        self.menu.addAction(self.action_2)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Сканирование по IP-адресу"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Сканирование по адресу"))
        self.pushButton.setText(_translate("MainWindow", "Проведение инвентаризации"))
        self.pushButton_2.setText(_translate("MainWindow", "Поиск уязвимостей"))
        self.pushButton_3.setText(_translate("MainWindow", "Отчет поиска уязвимостей html"))
        self.menu.setTitle(_translate("MainWindow", "Информация"))
        self.action.setText(_translate("MainWindow", "Информация о программе"))
        self.action_2.setText(_translate("MainWindow", "Информация о разработчиках"))

    def activate1(self):
        index = self.comboBox.currentIndex()
        if index == 0:
            self.lineEdit.setText("127.0.0.1")
        if index == 1:
            self.lineEdit.setText("www.google.com")

    def Nmaep(self):
        nm = nmap.PortScanner()
        target = self.lineEdit.text()
        scan_raw_result = nm.scan(hosts=target, ports=None, arguments='-A')
        for host, result in scan_raw_result['scan'].items():
            if result['status']['state'] == 'up':
                self.textEdit.setText('#' * 17 + 'Host:' + host + '#' * 17)
                self.textEdit.append('-' * 20 + 'Возможная операционная система:' + '-' * 20)
                #print('#' * 17 + 'Host:' + host + '#' * 17)
                #print('-' * 20 + 'Возможная операционная система:' + '-' * 20)
                #print(result)
                for os in result['osmatch']:
                    self.textEdit.append('Операционная система: ' + os['name'] + ' ' * 3 + 'Вероятность: ' + os['accuracy'])
                    #print('Операционная система: ' + os['name'] + ' ' * 3 + 'Вероятность: ' + os['accuracy'])
                    idno = 1
                    try:
                        for port in result['tcp']:
                            try:
                                self.textEdit.append('-' * 17 + 'Детали TCP - сервера' + '[' + str(idno) + ']' + '-' * 17)
                                #print('-' * 17 + 'Детали TCP - сервера' + '[' + str(idno) + ']' + '-' * 17)
                                idno += 1
                                self.textEdit.append('Номер порта TCP:' + str(port))
                                #print('Номер порта TCP:' + str(port))
                                try:
                                    self.textEdit.append('Доступность:' + result['tcp'][port]['state'])
                                    #print('Доступность:' + result['tcp'][port]['state'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('причина:' + result['tcp'][port]['reason'])
                                    #print('причина:' + result['tcp'][port]['reason'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('Дополнительная информация:' + result['tcp'][port]['extrainfo'])
                                    #print('Дополнительная информация:' + result['tcp'][port]['extrainfo'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('Имя протокола:' + result['tcp'][port]['name'])
                                    #print('Имя протокола:' + result['tcp'][port]['name'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('версия:' + result['tcp'][port]['version'])
                                    #print('версия:' + result['tcp'][port]['version'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('товар:' + result['tcp'][port]['product'])
                                    #print('товар:' + result['tcp'][port]['product'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('CPE：' + result['tcp'][port]['cpe'])
                                   # print('CPE：' + result['tcp'][port]['cpe'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('Используемый скрипт: ' + result['tcp'][port]['script'])
                                    #print('Используемый скрипт: ' + result['tcp'][port]['script'])
                                except:
                                    pass
                            except:
                                pass
                    except:
                        pass

                    idno = 1
                    try:
                        for port in result['udp']:
                            try:
                                self.textEdit.append('-' * 17 + 'Детали сервера UDP' + '[' + str(idno) + ']' + '-' * 17)
                                #print('-' * 17 + 'Детали сервера UDP' + '[' + str(idno) + ']' + '-' * 17)
                                idno += 1
                                self.textEdit.append('Номер порта UDP:' + str(port))
                                #print('Номер порта UDP:' + str(port))
                                try:
                                    self.textEdit.append('положение дел:' + result['udp'][port]['state'])
                                    #print('положение дел:' + result['udp'][port]['state'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('причина:' + result['udp'][port]['reason'])
                                    #print('причина:' + result['udp'][port]['reason'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('Дополнительная информация:' + result['udp'][port]['extrainfo'])
                                   # print('Дополнительная информация:' + result['udp'][port]['extrainfo'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('Имя:' + result['udp'][port]['name'])
                                    #print('Имя:' + result['udp'][port]['name'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('версия:' + result['udp'][port]['version'])
                                    #print('версия:' + result['udp'][port]['version'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('товар:' + result['udp'][port]['product'])
                                    #print('товар:' + result['udp'][port]['product'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('CPE：' + result['udp'][port]['cpe'])
                                    #print('CPE：' + result['udp'][port]['cpe'])
                                except:
                                    pass
                                try:
                                    self.textEdit.append('Сценарий: ' + result['udp'][port]['script'])
                                    #print('Сценарий: ' + result['udp'][port]['script'])
                                except:
                                    pass
                            except:
                                pass
                    except:
                        pass

    def Vulners(self):
        addrOfTarget = self.lineEdit.text()
        os.system('nmap -sV -oA otchet --stylesheet https://raw.githubusercontent.com/bylgakov46/saz/main/bdo.xsl --script vuln' + ' ' + addrOfTarget + ' '
        "> ee.txt")
        with open('ee.txt', 'r') as file:
            data = file.read()
            # data = file.read().replace('\n', '')
        self.textEdit.setText(data)

    # def Vulners(self):
    #     addrOfTarget = self.lineEdit.text()
    #     os.system('nmap --script "brute" 127.0.0.1')
    #     with open('ee.txt', 'r') as file:
    #         data = file.read()
    #     self.textEdit.setText(data)


    def Otchet(addrOfTarget):
        webbrowser.open('http://localhost:63342/pythonProject1/otchet.xml')



if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())